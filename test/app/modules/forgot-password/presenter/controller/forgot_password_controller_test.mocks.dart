// Mocks generated by Mockito 5.4.2 from annotations
// in smile_front/test/app/modules/forgot-password/presenter/controller/forgot_password_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:smile_front/app/modules/forgot-password/domain/repository/forgot_password_datasource_interface.dart'
    as _i2;
import 'package:smile_front/app/modules/forgot-password/domain/usecases/change_password.dart'
    as _i5;
import 'package:smile_front/app/modules/forgot-password/domain/usecases/forgot_password.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ForgotPasswordRepositoryInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockForgotPasswordRepositoryInterface extends _i1.Mock
    implements _i2.ForgotPasswordRepositoryInterface {
  MockForgotPasswordRepositoryInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> forgotPassword(String? username) => (super.noSuchMethod(
        Invocation.method(
          #forgotPassword,
          [username],
        ),
        returnValue: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);

  @override
  _i3.Future<String> changePassword(
    String? username,
    String? password,
    String? code,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePassword,
          [
            username,
            password,
            code,
          ],
        ),
        returnValue: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);
}

/// A class which mocks [ForgotPasswordInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockForgotPasswordInterface extends _i1.Mock
    implements _i4.ForgotPasswordInterface {
  MockForgotPasswordInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> call(String? username) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [username],
        ),
        returnValue: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);
}

/// A class which mocks [ChangePasswordInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockChangePasswordInterface extends _i1.Mock
    implements _i5.ChangePasswordInterface {
  MockChangePasswordInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> call(
    String? username,
    String? password,
    String? code,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [
            username,
            password,
            code,
          ],
        ),
        returnValue: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);
}
