// Mocks generated by Mockito 5.0.16 from annotations
// in smile_front/test/app/modules/dashboard/domain/usecases/search_by_activities_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:smile_front/app/modules/dashboard/domain/entities/activities.dart'
    as _i6;
import 'package:smile_front/app/modules/dashboard/domain/errors/errors.dart'
    as _i5;
import 'package:smile_front/app/modules/dashboard/domain/repositories/activities_repository.dart'
    as _i3;
import 'package:smile_front/app/modules/dashboard/domain/service/presentation/activities_enum.dart'
    as _i7;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [ActivitiesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockActivitiesRepository extends _i1.Mock
    implements _i3.ActivitiesRepository {
  MockActivitiesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.FailureGetActivities, _i4.Future<List<_i6.Activities>>>>
      getActivities(_i7.ActivitiesEnum? activitiesEnum) => (super.noSuchMethod(
              Invocation.method(#getActivities, [activitiesEnum]),
              returnValue:
                  Future<_i2.Either<_i5.FailureGetActivities, _i4.Future<List<_i6.Activities>>>>.value(
                      _FakeEither_0<_i5.FailureGetActivities, _i4.Future<List<_i6.Activities>>>()))
          as _i4.Future<
              _i2.Either<_i5.FailureGetActivities, _i4.Future<List<_i6.Activities>>>>);
  @override
  String toString() => super.toString();
}
