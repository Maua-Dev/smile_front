// Mocks generated by Mockito 5.1.0 from annotations
// in smile_front/test/app/modules/auth/presenter/controllers/auth_controller_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:smile_front/app/modules/auth/domain/repositories/auth_repository_interface.dart'
    as _i2;
import 'package:smile_front/app/modules/auth/domain/repositories/secure_storage_interface.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [AuthRepositoryInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepositoryInterface extends _i1.Mock
    implements _i2.AuthRepositoryInterface {
  MockAuthRepositoryInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<Map<String, dynamic>> login(String? user, String? password) =>
      (super.noSuchMethod(Invocation.method(#login, [user, password]),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i3.Future<Map<String, dynamic>>);
  @override
  _i3.Future<String> refreshToken(String? token) =>
      (super.noSuchMethod(Invocation.method(#refreshToken, [token]),
          returnValue: Future<String>.value('')) as _i3.Future<String>);
  @override
  _i3.Future<String> getAccessLevel(String? user) =>
      (super.noSuchMethod(Invocation.method(#getAccessLevel, [user]),
          returnValue: Future<String>.value('')) as _i3.Future<String>);
}

/// A class which mocks [SecureStorageInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorageInterface extends _i1.Mock
    implements _i4.SecureStorageInterface {
  MockSecureStorageInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveToken(String? token) =>
      (super.noSuchMethod(Invocation.method(#saveToken, [token]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<String?> getToken() =>
      (super.noSuchMethod(Invocation.method(#getToken, []),
          returnValue: Future<String?>.value()) as _i3.Future<String?>);
  @override
  _i3.Future<void> saveAccessLevel(String? accessLevel) =>
      (super.noSuchMethod(Invocation.method(#saveAccessLevel, [accessLevel]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<String?> getAccessLevel() =>
      (super.noSuchMethod(Invocation.method(#getAccessLevel, []),
          returnValue: Future<String?>.value()) as _i3.Future<String?>);
  @override
  _i3.Future<void> cleanSecureStorage() =>
      (super.noSuchMethod(Invocation.method(#cleanSecureStorage, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
}
